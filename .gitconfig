[user]
	email = vasek.henzl@gmail.com
	name = Vašek Henzl
[alias]
	please = push --force-with-lease
	it = !git init && git commit -m \"Initialize repository\" --allow-empty
	shorty = status --short --branch
	grog = log --graph --abbrev-commit --decorate --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
	groga = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
	logg = log --oneline --graph --decorate
	logc = log --pretty=format:%h
	glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	prune = fetch --prune
	undo = reset --soft HEAD^
	stash-all = stash save --include-untracked
	top = log --graph --pretty=format:'%C(yellow)%h%Creset%C(red)%d%Creset %s %C(bold blue)<%an>%Creset' -10
	log-pr = log --graph --pretty=format:'%C(yellow)%h%Creset %s %C(bold blue)<%an>%Creset'
	sub-update = "!f() { cd $1 && git checkout master && git pull && git submodule update --init --recursive; }; f"
	brs = for-each-ref --sort=committerdate --format='%(color:green)%(refname:short)%(color:reset)%09%09%(committerdate) %(color:yellow)<%(authorname)>%(color:normal)' refs/heads
	co = checkout
	br = branch
	cp = cherry-pick
	fm = fetch origin master:master
